swagger: "2.0"
info:
  version: "0.0.1"
  title: Hangman
  description: Test game
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /games:
    # our controller name
    x-swagger-router-controller: "game"
    get:
      summary: "List of available games"
      description: |
        The GetGameList endpoint returns sorted list of available hangman games as an array of objects with the game title and id propperties.
      operationId: "getGameList"
      # define the type of response for Success "200" and Error
      tags:
        - "Games"
      responses:
        "200":
          description: "Game added to the list!"
          schema:
            $ref: "#/definitions/GetGameListResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: "Add a new game to the list"
      description: "The saveGame endpoint adds a new game object to the list. At this time it does not check for duplicates."
      operationId: "saveGame"
      # game info to be stored
      tags:
        - "Games"
      parameters:
        - name: body
          description: "Game object"
          in: body
          required: true
          schema:
            $ref: "#/definitions/Game"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /games/{id}:
    # our controller name
    x-swagger-router-controller: "game"
    get:
      summary: "Retrieve a game by id"
      description: "The getGame endpoint returns a game with id provided as an object with the game category, wrong_allowed and guess_words(array) propperties."
      operationId: "getGame"
      # define the type of response for Success "200" and Error
      tags:
        - "Games"
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GetGameResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: "Update a game by id"
      description: "The updateGame endpoint updates a game object with id provided within the list by replacing existing object with a new one."
      operationId: "updateGame"
      # define the parameters
      tags:
        - "Games"
      parameters:
        - name: id
          description: "The id of the game to be updated"
          type: string
          in: path
          required: true
        - name: body
          in: body
          description: "Game object properties"
          required: true
          schema:
            $ref: "#/definitions/Game"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete a game by id"
      description: "The deleteGame endpoint removes a game object with id provided from the list."
      operationId: "deleteGame"
      # define the parameters
      tags:
        - "Games"
      parameters:
        - name: id
          description: "The id of the game to be deleted"
          type: string
          in: path
          required: true
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"  
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  # GET /game successful response
  GetGameListResponse:
    required:
      - games
    properties:
      # The array of games
      games:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            category:
              type: string
  GetGameResponse:
    required:
      - id
      - category
      - guess_words
    properties:
      id:
        type: string
      category: 
        type: string
      wrong_allowed: 
        type: number
      guess_words:
        type: array
        items:
          $ref: '#/definitions/Guess'
  Game:
    type: object
    required:
      - category
      - guess_words
    properties:
      category:
        type: string
        description: "Game title"
      wrong_allowed:
        type: number
        description: "Number of wrong guesses allowed"
      guess_words:
        type: array
        items:
          $ref: '#/definitions/Guess'
  Guess:
    type: object
    required:
      - word
    properties:
      word:
        type: string
        description: "Single guess word"
      hints:
        type: string
        description: "Guess hints"
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: "returns 1 if successful"
      description:
        type: string
        description: "Successful request"
    required:
      - success
      - description
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
